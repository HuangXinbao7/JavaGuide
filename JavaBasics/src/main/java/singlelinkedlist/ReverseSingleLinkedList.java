package singlelinkedlist;

/**
 * 单链表的数据结构
 * 以及通过三种方式（递归、双指针法、循环遍历）进行单链表的反转。
 */
public class ReverseSingleLinkedList {

    /**
     * 1、单链表的数据结构：
     * 单链表是一种线性结构，由一个个节点（Node）组成。
     * 并且每个节点（Node）由一块数据域（data）和一块指针域（next）组成。
     *
     * 节点（Node）结构如下：
     *  节点的数据域：
     *      data数据域存放数据。
     *      （注：data域需要指定类型，只能存放指定类型的数据，推荐使用泛型。）
     *  节点的指针域：
     *      next指针域存放指向下一个节点的指针；这个指针其实是一个内存地址。
     *      因为Node节点对象存放在JVM中的堆内存中，
     *      所以节点的next指针域中存放的就是下一个节点在堆内存中的地址；
     *      而在代码中对象的内存地址是赋值给其引用变量了，
     *      所以指针域中存放的是下一个节点对象的引用变量。
     */




}

